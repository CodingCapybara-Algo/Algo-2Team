package week_9.skwent77;

import java.util.Arrays;

public class PGS_입국심사 {
    // 최대 심사 개수가 입국 심사 기다리는 사람들보다 크거나 같게 하는 시간 중 가장 작은 값 찾는 문제
    private boolean check(long t, int n, int[] times) {
        long ppl = 0;
        for (int time : times) {
            ppl = ppl + (t / time); //시간 ta 동안 처리할 수 있는 최대 심사 개수 더해
        }
        return ppl >= n; //대기자 수보다 많거나 같은지 확인
    }
// 심사 가능한 사람의 수가 심사 받아야 할 사람의 수보다 많은지 적은지 체크하는 함수
    public long solution(int n, int[] times) {
        // long answer = 0;
        long start = 1;

        int len = times.length-1;
        long end =  (long) times[len - 1] * n;
        long answer = end;

        while (start <= end) {
            // int idx = (start+end)/2;
            long mid = (start + end) / 2;
            if (check(mid, n, times)) {
                answer = mid;
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return answer;

    }
}
/*
테스트 1 〉	통과 (0.78ms, 66.7MB)
테스트 2 〉	통과 (0.88ms, 77.4MB)
테스트 3 〉	통과 (2.99ms, 75.1MB)
테스트 4 〉	통과 (43.84ms, 83.8MB)
테스트 5 〉	통과 (44.50ms, 91.4MB)
테스트 6 〉	통과 (46.68ms, 79.4MB)
테스트 7 〉	통과 (80.72ms, 87.8MB)
테스트 8 〉	통과 (61.31ms, 100MB)
테스트 9 〉	통과 (0.85ms, 75.9MB)

with example
이진 탐색 과정:

1번째 반복:
mid = 30: left와 right의 중간값으로 30분을 선택합니다.
첫 번째 심사관은 30분 동안 4명(30 / 7), 두 번째 심사관은 3명(30 / 10)을 처리할 수 있어 총 7명을 처리할 수 있습니다.
7명은 필요한 6명보다 많으므로 시간을 줄이기 위해 right를 29로 설정하고, answer를 30으로 기록합니다.
2번째 반복:

mid = 15: 15분을 선택합니다.
첫 번째 심사관은 2명(15 / 7), 두 번째 심사관은 1명(15 / 10)을 처리할 수 있어 총 3명을 처리할 수 있습니다.
3명은 필요한 6명보다 적으므로 시간을 늘리기 위해 left를 16으로 설정합니다.
3번째 반복:

mid = 22: 22분을 선택합니다.
첫 번째 심사관은 3명(22 / 7), 두 번째 심사관은 2명(22 / 10)을 처리할 수 있어 총 5명을 처리할 수 있습니다.
5명은 필요한 6명보다 적으므로 left를 23으로 설정합니다.
4번째 반복:

mid = 26: 26분을 선택합니다.
첫 번째 심사관은 3명(26 / 7), 두 번째 심사관은 2명(26 / 10)을 처리할 수 있어 총 5명을 처리할 수 있습니다.
5명은 필요한 6명보다 적으므로 left를 27으로 설정합니다.
5번째 반복:

mid = 28: 28분을 선택합니다.
첫 번째 심사관은 4명(28 / 7), 두 번째 심사관은 2명(28 / 10)을 처리할 수 있어 총 6명을 처리할 수 있습니다.
6명은 필요한 6명과 같으므로 right를 27로 설정하고, answer를 28로 기록합니다.
6번째 반복:

mid = 27: 27분을 선택합니다.
첫 번째 심사관은 3명(27 / 7), 두 번째 심사관은 2명(27 / 10)을 처리할 수 있어 총 5명을 처리할 수 있습니다.
5명은 필요한 6명보다 적으므로 left를 28로 설정합니다.
 */